{"version":3,"sources":["pages/JotForm.js","components/Card.js","pages/Cards.js","pages/NewUser.js","pages/Contacts.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["JotForm","props","console","log","aa","Container","className","src","Card","ID","Naam_VB","Nieuwe_bewoner","Straat","NR","PC","Plaats","Niet_via_ons","Verhuis_uit_OK","Water_verwerkt_OK","Nieuw_contract_OK","type","value","id","checked","htmlFor","Cards","state","movies","fetch","then","resp","json","data","setState","records","catch","err","this","filter","movie","fields","Bron","map","Component","NewUser","Form","Row","Col","md","Group","controlId","Label","Control","placeholder","Button","variant","Contacts","Image","thumbnail","HomePage","isEmpty","obj","prop","hasOwnProperty","a","email","document","getElementById","password","url","response","ok","alert","App","isLoggedIn","status","onClick","GetUsers","size","block","b","window","location","href","NavChangeColor","page","div","style","background","Navbar","Brand","width","height","Nav","Link","as","to","exact","path","component","undefined","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.66417320.chunk.js","sourcesContent":["import React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport JotformEmbed from 'react-jotform-embed';\n\nfunction JotForm(props) {\n    console.log(props.aa);\n    // window.onload = function () {\n    //     let formFooter = document.getElementsByClassName(\"formFooter\")\n    //     alert(formFooter.style);\n    //     formFooter.style.visibility = \"hidden\";\n    // }\n    return (\n        <Container>\n            <Container className=\"b\">\n                <h5 className=\"for-h\">Nieuwe aanvraag</h5>\n                <br />\n                <JotformEmbed src=\"https://form.jotform.com/form/210825033300337\" />\n            </Container>\n        </Container>\n    );\n}\n\nexport default JotForm;\n","import React from \"react\";\n\nconst Card = ({ ID, Naam_VB, Nieuwe_bewoner, Straat, NR, PC, Plaats, Niet_via_ons, Verhuis_uit_OK, Water_verwerkt_OK, Nieuw_contract_OK, }) => (\n    <div className=\"card h-100\">\n        <div className=\"card-header\">{ID}</div>\n        <div className=\"card-body\">\n            <h6 className=\"card-title\">{Straat}</h6>\n            <h6 className=\"card-subtitle mb-2 text-muted\">{NR} {PC} {Plaats}</h6>\n            <p className=\"card-text\">{Naam_VB}</p>\n            <p className=\"card-text\">{Nieuwe_bewoner}</p>\n            <div className=\"form-check\">\n                <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\" checked={Niet_via_ons}/>\n                <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">Niet via ons</label>\n            </div>\n            <div className=\"form-check\">\n                <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\" checked={Verhuis_uit_OK}/>\n                <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">Verhuis uit OK</label>\n            </div>\n            <div className=\"form-check\">\n                <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\" checked={Water_verwerkt_OK}/>\n                <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">Water verwerkt OK</label>\n            </div>\n            <div className=\"form-check\">\n                <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"flexCheckDefault\" checked={Nieuw_contract_OK}/>\n                <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">Nieuw contract OK</label>\n            </div>\n        </div>\n    </div>\n);\n\nexport default Card;\n","import React, { Component } from 'react';\nimport { Container } from \"react-bootstrap\";\nimport Card from \"../components/Card\";\n\nclass Cards extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            movies: [],\n        };\n    }\n    componentDidMount() {\n        fetch('https://api.airtable.com/v0/appeWVfjZSZCKffa9/Opvolglijst?api_key=keyVSrCrrUoAU2Sh5')\n            .then((resp) => resp.json())\n            .then(data => {\n                //console.log(data);\n                this.setState({ movies: data.records });\n                //console.log(this.state.movies.filter(movie => movie.fields.Bron == \"test\"));\n            })\n            .catch(err => {\n                // Error\n            });\n    }\n    render() {\n        return (\n            <Container>\n                <Container className=\"b\">\n                    <h5 className=\"for-h\">Status mijn dossiers</h5>\n                    <br />\n                    <div className=\"card-columns\">\n                        {this.state.movies.filter(movie => movie.fields.Bron == \"Malines Group\").map(movie => <Card {...movie.fields} /> )}\n                    </div>\n                </Container>\n            </Container>\n        );\n    }\n}\n\nexport default Cards;\n","import React from \"react\";\nimport {Button, Col, Container, Form, Row} from \"react-bootstrap\";\n\nfunction NewUser() {\n    return (\n        <Container>\n            <Container className=\"b\">\n                <h5 className=\"for-h\">Voer uw contactgegevens in</h5>\n                <br />\n                    <Form>\n                        <Row>\n                            <Col md>\n                                <Form.Group controlId=\"formBasicEmail\">\n                                    <Form.Label className=\"text-muted form_font-size\">Naam*</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"\" />\n                                    {/*<Form.Text className=\"text-muted\">*/}\n                                    {/*    We'll never share your email with anyone else.*/}\n                                    {/*</Form.Text>*/}\n                                </Form.Group>\n                                <Form.Group controlId=\"formBasicPassword\">\n                                    <Form.Label className=\"text-muted form_font-size\">Voornaam*</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"\" />\n                                </Form.Group>\n                            </Col>\n                            <Col md>\n                                <Form.Group controlId=\"formBasicPassword\">\n                                    <Form.Label className=\"text-muted form_font-size\">Wachtwoord*</Form.Label>\n                                    <Form.Control type=\"password\" placeholder=\"\" />\n                                </Form.Group>\n                                <Form.Group controlId=\"formBasicPassword\">\n                                    <Form.Label className=\"text-muted form_font-size\">Herhaal je wachtwoord*</Form.Label>\n                                    <Form.Control type=\"password\" placeholder=\"\" />\n                                </Form.Group>\n                            </Col>\n                        </Row>\n                        <Button variant=\"outline-secondary\" type=\"submit\">\n                            Verder\n                        </Button>\n                    </Form>\n            </Container>\n        </Container>\n    );\n}\n\nexport default NewUser;\n","import React from \"react\";\nimport { Container, Image } from \"react-bootstrap\";\n\nfunction Contacts() {\n    return (\n        <Container>\n            <Container className=\"b\">\n                <h5 className=\"for-h\">Contacten</h5>\n                <br />\n                <Image src=\"ET_banner.png\" thumbnail />\n            </Container>\n        </Container>\n    );\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\nimport App from \"../App\";\nimport ReactDOM from 'react-dom';\nimport JotForm from \"./JotForm\";\nimport {HashRouter} from \"react-router-dom\";\nimport Greeting from \"../components/Greeting\";\n\nfunction HomePage(props) {\n\n    function isEmpty(obj) {\n        for (let prop in obj) {\n            if (obj.hasOwnProperty(prop)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    async function GetUsers(props) {\n        let email = document.getElementById(\"email\").value;\n        let password = document.getElementById(\"password\").value;\n        if (email !== \"\" && password !== \"\") {\n            let filterByFormula = '&filterByFormula=AND({email}=\"'+email+'\",{password}=\"'+password+'\")'\n            let url = 'https://api.airtable.com/v0/appeWVfjZSZCKffa9/Users?api_key=keyVSrCrrUoAU2Sh5'+filterByFormula;\n            let response = await fetch(url);\n\n            if (response.ok) { // если HTTP-статус в диапазоне 200-299\n                // получаем тело ответа (см. про этот метод ниже)\n                let json = await response.json();\n                let records = json.records;\n                console.log(json);\n                if(isEmpty(records)) {\n                    alert('Wrong email or password.');\n                }\n                else {\n                    //console.log(json.records[0].fields.email);\n                    //console.log(json.records[0].fields.password);\n                    //window.location.href = \"#/new\";\n                    // ReactDOM.render(\n                    //     <React.StrictMode>\n                    //         <HashRouter>\n                    //             <Greeting isLoggedIn={true} />\n                    //         </HashRouter>\n                    //     </React.StrictMode>,\n                    //     document.getElementById('root')\n                    // )\n                    //Greeting(props.isLoggedIn = true);\n                    App({isLoggedIn: false});\n                    // const element = <App aa=\"login\" />;\n                    // ReactDOM.render(\n                    //     element,\n                    //     document.getElementById('root')\n                    // )\n                }\n            }\n            else {\n                alert(\"Ошибка HTTP: \" + response.status);\n            }\n        }\n        else {\n            alert('Enter email and password.');\n        }\n    }\n    function Compare() {\n        let a, b, c;\n        a = document.getElementById(\"one\").value;\n        b = document.getElementById(\"two\").value;\n        if (a !== \"\" && b !== \"\") {\n            if (a !== b)\n                alert(\"Emails is different! Check it please!\");\n            else\n                window.location.href = \"#/new_user\";\n        } else if (a === \"\" || b === \"\") {\n            alert(\"Enter email please!\");\n        }\n    }\n    return (\n        <Container>\n            <Container className=\"b\">\n                <h5 className=\"for-h\">Welkom bij mijn portal - meld je aan</h5>\n                <br />\n                <Row>\n                    <Col md>\n                        <span className=\"for-span\">Ik heb al een account bij Electro-test</span>\n                        <br />\n                        <Form>\n                            <Form.Group controlId=\"formBasicEmail\">\n                                <Form.Label className=\"text-muted form_font-size\">E-mailadres*</Form.Label>\n                                <Form.Control id=\"email\" type=\"email\" placeholder=\"\" />\n                                {/*<Form.Text className=\"text-muted\">*/}\n                                {/*    We'll never share your email with anyone else.*/}\n                                {/*</Form.Text>*/}\n                            </Form.Group>\n                            <Form.Group controlId=\"formBasicPassword\">\n                                <Form.Label className=\"text-muted form_font-size\">Wachtwoord*</Form.Label>\n                                <Form.Control id=\"password\" type=\"password\" placeholder=\"\" />\n                            </Form.Group>\n                            {/*<Form.Group controlId=\"formBasicCheckbox\">*/}\n                            {/*    <Form.Check type=\"checkbox\" label=\"Check me out\" />*/}\n                            {/*</Form.Group>*/}\n                            <Button id=\"login_button\" variant=\"outline-secondary\" type=\"submit\" onClick={() => GetUsers()} size=\"sm\" block>\n                                Aanmelden\n                            </Button>\n                        </Form>\n                        <br />\n                    </Col>\n                    <div className=\"v-line\">\n                    </div>\n                    <Col md>\n                        <span className=\"for-span\">Ik heb nog geen account bij Electro-test</span>\n                        <br />\n                        <Form>\n                            <Form.Group controlId=\"formBasicEmail\">\n                                <Form.Label className=\"text-muted form_font-size\">E-mailadres*</Form.Label>\n                                <Form.Control id=\"one\" type=\"email\" placeholder=\"\" />\n                                {/*<Form.Text className=\"text-muted\">*/}\n                                {/*    We'll never share your email with anyone else.*/}\n                                {/*</Form.Text>*/}\n                            </Form.Group>\n                            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                <Form.Label className=\"text-muted form_font-size\">Herhaal e-mailadres*</Form.Label>\n                                <Form.Control id=\"two\" type=\"email\" placeholder=\"\" />\n                            </Form.Group>\n                            {/*<Form.Group controlId=\"formBasicCheckbox\">*/}\n                            {/*    <Form.Check type=\"checkbox\" label=\"Check me out\" />*/}\n                            {/*</Form.Group>*/}\n                            <Button variant=\"outline-secondary\" type=\"submit\" onClick={Compare} size=\"sm\" block>\n                            {/*<Button variant=\"secondary\" type=\"submit\" as={Link} to=\"/new_user\">*/}\n                                Verder\n                            </Button>\n                        </Form>\n                        <br />\n                    </Col>\n                </Row>\n            </Container>\n        </Container>\n    );\n}\n\nexport default HomePage;\n","import './App.css';\nimport React, { useState } from \"react\";\nimport { Component } from \"react\";\nimport { Link, Route, Switch } from 'react-router-dom'\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\nimport HomePage from \"./pages/HomePage\";\nimport JotForm from \"./pages/JotForm\";\nimport Cards from \"./pages/Cards\";\nimport NewUser from \"./pages/NewUser\";\nimport Contacts from \"./pages/Contacts\";\nimport 'fontsource-roboto';\nimport { Image } from  \"react-bootstrap\";\n\nfunction App(props) {\n    //const [tasks, setTasks] = useState(props.isLoggedIn);\n    console.log(\"App.js \"+props.isLoggedIn);\n    //alert(\"App.js \"+props.isLoggedIn);\n    function NavChangeColor(page) {\n        let div = document.getElementById(\"navbar\")\n        if (page === \"Contacts\") {\n            div.style.background = \"#343a40\";\n            //div.style.color = \"#3aaa35\";\n        }\n        else {\n            div.style.background = \"#3aaa35\";\n        }\n    }\n    if (props.isLoggedIn) {\n        console.log(\"True \"+props.isLoggedIn);\n        return (\n            <Container>\n                <header className=\"header\">\n                    <br />\n                    {/*<Container>*/}\n                    {/*    <Image src=\"ET_banner.png\" thumbnail />*/}\n                    {/*</Container>*/}\n                    {/*<br />*/}\n                    <Container id={props}>\n                        <Navbar id=\"navbar\" variant=\"dark\" className=\"navbar_border-radius color-nav\" >\n                            <Navbar.Brand href=\"/\">\n                                <Image src=\"ET_logo.png\" width=\"25\" height=\"25\" className=\"d-inline-block align-top\" />\n                                {/*<img*/}\n                                {/*    src=\"ET_logo.png\"*/}\n                                {/*    width=\"30\"*/}\n                                {/*    height=\"30\"*/}\n                                {/*    className=\"d-inline-block align-top\"*/}\n                                {/*    alt=\"Mijn portal\"*/}\n                                {/*/>*/}\n                                {' '}Mijn portal\n                            </Navbar.Brand>\n                            <Nav className=\"mr-auto\">\n                                {/*<Nav.Link href=\"/\">Home</Nav.Link>*/}\n                                <Nav.Link as={Link} to=\"/new\" onClick={() => NavChangeColor('New')}>Nieuwe aanvraag</Nav.Link>\n                                <Nav.Link as={Link} to=\"/check\" onClick={() => NavChangeColor('Check')}>Status mijn dossiers</Nav.Link>\n                                <Nav.Link as={Link} to=\"/contacts\" onClick={() => NavChangeColor('Contacts')}>Contacten</Nav.Link>\n                            </Nav>\n                        </Navbar>\n                    </Container>\n                </header>\n                <br />\n                <br />\n                <Switch>\n                    <Route exact path=\"/\" component={HomePage} />\n                    <Route path=\"/new\" component={JotForm} />\n                    <Route path=\"/check\" component={Cards} />\n                    <Route path=\"/new_user\" component={NewUser} />\n                    <Route path=\"/contacts\" component={Contacts} />\n                </Switch>\n                <p className=\"mt-5 mb-3 text-muted footer\">Electrotest &copy; 2021</p>\n            </Container>\n        );\n    } else if (props.isLoggedIn === undefined) {\n        console.log(\"False \"+props.isLoggedIn);\n        return (\n            <Container>\n                <header className=\"header\">\n                    <br />\n                    {/*<Container>*/}\n                    {/*    <Image src=\"ET_banner.png\" thumbnail />*/}\n                    {/*</Container>*/}\n                    {/*<br />*/}\n                    <Container id={props}>\n                        <Navbar id=\"navbar\" variant=\"dark\" className=\"navbar_border-radius color-nav\" >\n                            <Navbar.Brand href=\"/\">\n                                <Image src=\"ET_logo.png\" width=\"25\" height=\"25\" className=\"d-inline-block align-top\" />\n                                {/*<img*/}\n                                {/*    src=\"ET_logo.png\"*/}\n                                {/*    width=\"30\"*/}\n                                {/*    height=\"30\"*/}\n                                {/*    className=\"d-inline-block align-top\"*/}\n                                {/*    alt=\"Mijn portal\"*/}\n                                {/*/>*/}\n                                {' '}Mijn portal\n                            </Navbar.Brand>\n                            <Nav className=\"mr-auto\">\n                                {/*<Nav.Link href=\"/\">Home</Nav.Link>*/}\n                                {/*<Nav.Link as={Link} to=\"/new\" onClick={() => NavChangeColor('New')}>Nieuwe aanvraag</Nav.Link>*/}\n                                {/*<Nav.Link as={Link} to=\"/check\" onClick={() => NavChangeColor('Check')}>Status mijn dossiers</Nav.Link>*/}\n                                <Nav.Link as={Link} to=\"/contacts\" onClick={() => NavChangeColor('Contacts')}>Contacten</Nav.Link>\n                            </Nav>\n                        </Navbar>\n                    </Container>\n                </header>\n                <br />\n                <br />\n                <Switch>\n                    <Route exact path=\"/\" component={HomePage} />\n                    <Route path=\"/new\" component={JotForm} />\n                    <Route path=\"/check\" component={Cards} />\n                    <Route path=\"/new_user\" component={NewUser} />\n                    <Route path=\"/contacts\" component={Contacts} />\n                </Switch>\n                <p className=\"mt-5 mb-3 text-muted footer\">Electrotest &copy; 2021</p>\n            </Container>\n        );\n    }\n\n}\n\nexport default App;\n\n//class App extends Component {\n//   constructor() {\n//     super(props);\n//     this.state = {\n//       movies: [],\n//     }\n//   };\n//   componentDidMount() {\n//     fetch('https://api.airtable.com/v0/appeWVfjZSZCKffa9/Opvolglijst?api_key=keyVSrCrrUoAU2Sh5')\n//       .then((resp) => resp.json())\n//       .then(data => {\n//         //console.log(data);\n//         this.setState({ movies: data.records });\n//         //console.log(this.state.movies.filter(movie => movie.fields.Bron == \"test\"));\n//       }).catch(err => {\n//       // Error\n//     });\n//   }\n//   render() {\n//     return (\n//       <div className=\"container\">\n//         <img className=\"img-fluid mb-4\" src=\"logo.png\" alt=\"\" />\n//         <h6 className=\"for-span-head\">Mijn portal</h6>\n//         <Switch>\n//           <Route exact path=\"/\" component={HomePage} />\n//           <Route path=\"/new\" component={JotForm} />\n//           <Route path=\"/check\" component={Cards} />\n//         </Switch>\n//         <p className=\"mt-5 mb-3 text-muted\">Electrotest &copy; 2021</p>\n//         {/*<div className=\"container mt-5\">*/}\n//         {/*  <div className=\"card-columns\">*/}\n//         {/*    {this.state.movies.filter(movie => movie.fields.Bron == \"Malines Group\").map(movie => <Cards {...movie.fields} /> )}*/}\n//         {/*  </div>*/}\n//       </div>\n//     );\n//   }\n// }\n//\n// export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {render} from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n//import { BrowserRouter } from  'react-router-dom';\nimport { HashRouter } from  'react-router-dom';\n// Import Bootstrap CSS and JS\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <App isLoggedIn = {true} />\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n    //document.querySelector('#root')\n)\n\n// render(\n//     <BrowserRouter>\n//         <App />\n//     </BrowserRouter>,\n//     document.querySelector('#root')\n// )\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}